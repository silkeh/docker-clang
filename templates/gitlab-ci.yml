---
default:
  interruptible: true

.docker:
  stage: build
  image: docker:stable
  needs:
    - pipeline: $PARENT_PIPELINE_ID
      job: generate
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  before_script:
    - docker info
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_TAG -f dockerfiles/$IMAGE_TAG.Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

.docker-buildx:
  extends: .docker
  image: jdrouet/docker-with-buildx:stable
  cache:
    key: buildx-$IMAGE_TAG
    paths: [.buildx-cache]
  script:
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --driver=docker-container --use
    - docker buildx build .
        --pull
        --target=test
        --cache-from type=local,src=.buildx-cache
        --cache-to type=local,dest=.buildx-cache
        --file dockerfiles/$IMAGE_TAG.Dockerfile
        --platform $PLATFORMS
    - docker buildx build . --target=final
        --pull
        --push
        --tag $CI_REGISTRY_IMAGE:$IMAGE_TAG
        --cache-from type=local,src=.buildx-cache
        --file dockerfiles/$IMAGE_TAG.Dockerfile
        --platform $PLATFORMS

.alias:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - echo $CI_JOB_TOKEN | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$SRC_TAG
    - docker tag $CI_REGISTRY_IMAGE:$SRC_TAG $CI_REGISTRY_IMAGE:$DST_TAG
    - docker push $CI_REGISTRY_IMAGE:$DST_TAG

.environment-alias:
  stage: build
  image: docker:stable
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
  script:
    - docker info
    - echo $DOCKER_REGISTRY_TOKEN | docker login -u $DOCKER_REGISTRY_USER --password-stdin $DOCKER_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$SRC_TAG
    - docker tag $CI_REGISTRY_IMAGE:$SRC_TAG $DOCKER_REGISTRY_IMAGE:$DST_TAG
    - docker push $DOCKER_REGISTRY_IMAGE:$DST_TAG
